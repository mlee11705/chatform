{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Projects/react-conversational-form-example-bgnaje/src/myForm.js\";\nimport React from 'react';\nimport { ConversationalForm } from 'conversational-form';\nimport python from 'python-bridge';\nimport { OPENAI_API_KEY } from './.env';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formFields = [{\n      'tag': 'input',\n      'type': 'text',\n      'name': 'firstname',\n      'cf-questions': 'What is your firstname?'\n    }, {\n      'tag': 'input',\n      'type': 'text',\n      'name': 'lastname',\n      'cf-questions': 'What is your lastname?'\n    }];\n    this.submitCallback = this.submitCallback.bind(this);\n    this.py = new python();\n    this.py.expose({\n      chain: (firstname, lastname) => {\n        return {\n          answer: `Hello ${firstname} ${lastname}`,\n          sources: 'local'\n        };\n      }\n    });\n  }\n  componentDidMount() {\n    this.cf = ConversationalForm.startTheConversation({\n      options: {\n        submitCallback: this.submitCallback,\n        preventAutoFocus: true\n        // loadExternalStyleSheet: false\n      },\n\n      tags: this.formFields\n    });\n    this.elem.appendChild(this.cf.el);\n  }\n  submitCallback() {\n    var formDataSerialized = this.cf.getFormData(true);\n    const firstname = formDataSerialized.firstname;\n    const lastname = formDataSerialized.lastname;\n    this.py.run('chain', firstname, lastname).then(answer => {\n      this.cf.addRobotChatResponse(`Answer: ${answer.answer}\\nSources: ${answer.sources}`);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref => this.elem = ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","ConversationalForm","python","OPENAI_API_KEY","MyForm","Component","constructor","props","formFields","submitCallback","bind","py","expose","chain","firstname","lastname","answer","sources","componentDidMount","cf","startTheConversation","options","preventAutoFocus","tags","elem","appendChild","el","formDataSerialized","getFormData","run","then","addRobotChatResponse","render","ref"],"sources":["/Users/mike/Projects/react-conversational-form-example-bgnaje/src/myForm.js"],"sourcesContent":["import React from 'react';\nimport { ConversationalForm } from 'conversational-form';\nimport python from 'python-bridge';\nimport { OPENAI_API_KEY } from './.env';\n\nexport default class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formFields = [\n      {\n        'tag': 'input',\n        'type': 'text',\n        'name': 'firstname',\n        'cf-questions': 'What is your firstname?'\n      },\n      {\n        'tag': 'input',\n        'type': 'text',\n        'name': 'lastname',\n        'cf-questions': 'What is your lastname?'\n      }\n    ];\n    \n    this.submitCallback = this.submitCallback.bind(this);\n    this.py = new python();\n    this.py.expose({\n      chain: (firstname, lastname) => {\n        return { answer: `Hello ${firstname} ${lastname}` , sources: 'local' };\n      }\n    });\n  }\n  \n  componentDidMount() {\n    this.cf = ConversationalForm.startTheConversation({\n      options: {\n        submitCallback: this.submitCallback,\n        preventAutoFocus: true,\n        // loadExternalStyleSheet: false\n      },\n      tags: this.formFields\n    });\n    this.elem.appendChild(this.cf.el);\n  }\n  \n  submitCallback() {\n    var formDataSerialized = this.cf.getFormData(true);\n    const firstname = formDataSerialized.firstname;\n    const lastname = formDataSerialized.lastname;\n    this.py.run('chain', firstname, lastname).then(answer => {\n      this.cf.addRobotChatResponse(`Answer: ${answer.answer}\\nSources: ${answer.sources}`);\n    });\n  }\n  \n  render() {\n    return (\n      <div>\n        <div\n          ref={ref => this.elem = ref}\n        />\n      </div>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,kBAAkB,QAAQ,qBAAqB;AACxD,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,cAAc,QAAQ,QAAQ;AAAC;AAExC,eAAe,MAAMC,MAAM,SAASJ,KAAK,CAACK,SAAS,CAAC;EAClDC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,UAAU,GAAG,CAChB;MACE,KAAK,EAAE,OAAO;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,WAAW;MACnB,cAAc,EAAE;IAClB,CAAC,EACD;MACE,KAAK,EAAE,OAAO;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,UAAU;MAClB,cAAc,EAAE;IAClB,CAAC,CACF;IAED,IAAI,CAACC,cAAc,GAAG,IAAI,CAACA,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACC,EAAE,GAAG,IAAIT,MAAM,EAAE;IACtB,IAAI,CAACS,EAAE,CAACC,MAAM,CAAC;MACbC,KAAK,EAAE,CAACC,SAAS,EAAEC,QAAQ,KAAK;QAC9B,OAAO;UAAEC,MAAM,EAAG,SAAQF,SAAU,IAAGC,QAAS,EAAC;UAAGE,OAAO,EAAE;QAAQ,CAAC;MACxE;IACF,CAAC,CAAC;EACJ;EAEAC,iBAAiB,GAAG;IAClB,IAAI,CAACC,EAAE,GAAGlB,kBAAkB,CAACmB,oBAAoB,CAAC;MAChDC,OAAO,EAAE;QACPZ,cAAc,EAAE,IAAI,CAACA,cAAc;QACnCa,gBAAgB,EAAE;QAClB;MACF,CAAC;;MACDC,IAAI,EAAE,IAAI,CAACf;IACb,CAAC,CAAC;IACF,IAAI,CAACgB,IAAI,CAACC,WAAW,CAAC,IAAI,CAACN,EAAE,CAACO,EAAE,CAAC;EACnC;EAEAjB,cAAc,GAAG;IACf,IAAIkB,kBAAkB,GAAG,IAAI,CAACR,EAAE,CAACS,WAAW,CAAC,IAAI,CAAC;IAClD,MAAMd,SAAS,GAAGa,kBAAkB,CAACb,SAAS;IAC9C,MAAMC,QAAQ,GAAGY,kBAAkB,CAACZ,QAAQ;IAC5C,IAAI,CAACJ,EAAE,CAACkB,GAAG,CAAC,OAAO,EAAEf,SAAS,EAAEC,QAAQ,CAAC,CAACe,IAAI,CAACd,MAAM,IAAI;MACvD,IAAI,CAACG,EAAE,CAACY,oBAAoB,CAAE,WAAUf,MAAM,CAACA,MAAO,cAAaA,MAAM,CAACC,OAAQ,EAAC,CAAC;IACtF,CAAC,CAAC;EACJ;EAEAe,MAAM,GAAG;IACP,oBACE;MAAA,uBACE;QACE,GAAG,EAAEC,GAAG,IAAI,IAAI,CAACT,IAAI,GAAGS;MAAI;QAAA;QAAA;QAAA;MAAA;IAC5B;MAAA;MAAA;MAAA;IAAA,QACE;EAEV;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}