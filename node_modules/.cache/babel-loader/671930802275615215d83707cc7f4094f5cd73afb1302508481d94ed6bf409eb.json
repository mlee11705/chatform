{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Projects/react-conversational-form-example-bgnaje/src/myForm.js\";\nimport React from 'react';\nimport { ConversationalForm } from 'conversational-form';\nimport PythonShell from 'python-shell';\nimport { OPENAI_API_KEY } from './.env';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formFields = [{\n      'tag': 'input',\n      'type': 'text',\n      'name': 'firstname',\n      'cf-questions': 'What is your firstname?'\n    }, {\n      'tag': 'input',\n      'type': 'text',\n      'name': 'lastname',\n      'cf-questions': 'What is your lastname?'\n    }];\n    this.submitCallback = this.submitCallback.bind(this);\n  }\n  componentDidMount() {\n    this.cf = ConversationalForm.startTheConversation({\n      options: {\n        submitCallback: this.submitCallback,\n        preventAutoFocus: true\n        // loadExternalStyleSheet: false\n      },\n\n      tags: this.formFields\n    });\n    this.elem.appendChild(this.cf.el);\n  }\n  submitCallback() {\n    var formDataSerialized = this.cf.getFormData(true);\n    const firstname = formDataSerialized.firstname;\n    const lastname = formDataSerialized.lastname;\n    var options = {\n      scriptPath: '/path/to/my/scripts',\n      args: [firstname, lastname]\n    };\n    PythonShell.run('qa.py', options, function (err, results) {\n      if (err) throw err;\n      this.cf.addRobotChatResponse(`Answer: ${results}\\nSources: Local`);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref => this.elem = ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","ConversationalForm","PythonShell","OPENAI_API_KEY","MyForm","Component","constructor","props","formFields","submitCallback","bind","componentDidMount","cf","startTheConversation","options","preventAutoFocus","tags","elem","appendChild","el","formDataSerialized","getFormData","firstname","lastname","scriptPath","args","run","err","results","addRobotChatResponse","render","ref"],"sources":["/Users/mike/Projects/react-conversational-form-example-bgnaje/src/myForm.js"],"sourcesContent":["import React from 'react';\nimport { ConversationalForm } from 'conversational-form';\nimport PythonShell from 'python-shell';\nimport { OPENAI_API_KEY } from './.env';\n\nexport default class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formFields = [\n      {\n        'tag': 'input',\n        'type': 'text',\n        'name': 'firstname',\n        'cf-questions': 'What is your firstname?'\n      },\n      {\n        'tag': 'input',\n        'type': 'text',\n        'name': 'lastname',\n        'cf-questions': 'What is your lastname?'\n      }\n    ];\n    this.submitCallback = this.submitCallback.bind(this);\n  }\n  \n  componentDidMount() {\n    this.cf = ConversationalForm.startTheConversation({\n      options: {\n        submitCallback: this.submitCallback,\n        preventAutoFocus: true,\n        // loadExternalStyleSheet: false\n      },\n      tags: this.formFields\n    });\n    this.elem.appendChild(this.cf.el);\n  }\n  \n  submitCallback() {\n    var formDataSerialized = this.cf.getFormData(true);\n    const firstname = formDataSerialized.firstname;\n    const lastname = formDataSerialized.lastname;\n\n    var options = {\n  scriptPath: '/path/to/my/scripts',\n  args: [firstname, lastname]\n};\n\nPythonShell.run('qa.py', options, function (err, results) {\n  if (err) throw err;\n  \n  this.cf.addRobotChatResponse(`Answer: ${results}\\nSources: Local`);\n});\n\n  }\n  \n  render() {\n    return (\n      <div>\n        <div\n          ref={ref => this.elem = ref}\n        />\n      </div>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,kBAAkB,QAAQ,qBAAqB;AACxD,OAAOC,WAAW,MAAM,cAAc;AACtC,SAASC,cAAc,QAAQ,QAAQ;AAAC;AAExC,eAAe,MAAMC,MAAM,SAASJ,KAAK,CAACK,SAAS,CAAC;EAClDC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,UAAU,GAAG,CAChB;MACE,KAAK,EAAE,OAAO;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,WAAW;MACnB,cAAc,EAAE;IAClB,CAAC,EACD;MACE,KAAK,EAAE,OAAO;MACd,MAAM,EAAE,MAAM;MACd,MAAM,EAAE,UAAU;MAClB,cAAc,EAAE;IAClB,CAAC,CACF;IACD,IAAI,CAACC,cAAc,GAAG,IAAI,CAACA,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;EACtD;EAEAC,iBAAiB,GAAG;IAClB,IAAI,CAACC,EAAE,GAAGX,kBAAkB,CAACY,oBAAoB,CAAC;MAChDC,OAAO,EAAE;QACPL,cAAc,EAAE,IAAI,CAACA,cAAc;QACnCM,gBAAgB,EAAE;QAClB;MACF,CAAC;;MACDC,IAAI,EAAE,IAAI,CAACR;IACb,CAAC,CAAC;IACF,IAAI,CAACS,IAAI,CAACC,WAAW,CAAC,IAAI,CAACN,EAAE,CAACO,EAAE,CAAC;EACnC;EAEAV,cAAc,GAAG;IACf,IAAIW,kBAAkB,GAAG,IAAI,CAACR,EAAE,CAACS,WAAW,CAAC,IAAI,CAAC;IAClD,MAAMC,SAAS,GAAGF,kBAAkB,CAACE,SAAS;IAC9C,MAAMC,QAAQ,GAAGH,kBAAkB,CAACG,QAAQ;IAE5C,IAAIT,OAAO,GAAG;MAChBU,UAAU,EAAE,qBAAqB;MACjCC,IAAI,EAAE,CAACH,SAAS,EAAEC,QAAQ;IAC5B,CAAC;IAEDrB,WAAW,CAACwB,GAAG,CAAC,OAAO,EAAEZ,OAAO,EAAE,UAAUa,GAAG,EAAEC,OAAO,EAAE;MACxD,IAAID,GAAG,EAAE,MAAMA,GAAG;MAElB,IAAI,CAACf,EAAE,CAACiB,oBAAoB,CAAE,WAAUD,OAAQ,kBAAiB,CAAC;IACpE,CAAC,CAAC;EAEA;EAEAE,MAAM,GAAG;IACP,oBACE;MAAA,uBACE;QACE,GAAG,EAAEC,GAAG,IAAI,IAAI,CAACd,IAAI,GAAGc;MAAI;QAAA;QAAA;QAAA;MAAA;IAC5B;MAAA;MAAA;MAAA;IAAA,QACE;EAEV;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}